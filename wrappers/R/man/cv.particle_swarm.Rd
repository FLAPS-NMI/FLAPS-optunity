% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/crossvalidation.R
\name{cv.particle_swarm}
\alias{cv.particle_swarm}
\title{Particle swarm optimization to find parameters giving best cross-validated score}
\usage{
cv.particle_swarm(setup, f, ..., num_particles = 5, num_generations = 10,
  maximize = TRUE, nested = FALSE)
}
\arguments{
\item{setup}{cv settings created by cv.setup}

\item{f}{function that trains a model and makes prediction. Its 4 first inputs have to be xtrain, ytrain, xtest, ytest. Should return predictions of xtest or final score, depending on cv setup, see details.}

\item{...}{box constraints for parameters in the form \code{logreg = c(-2, 5)} where logreg is input parameter to f}

\item{num_particles}{number of particles (setting for particle swarm)}

\item{num_generations}{number of generations (setting for particle swarm)}

\item{maximize}{whether to maximize or minimize the score (first of the scores if cv.setup has several scores)}

\item{nested}{whether to perform nested CV}
}
\description{
Particle swarm optimization to find parameters giving best cross-validated score
}
\examples{
x <- matrix(runif(50*5), 50, 40)
y <- x[,1] + 0.5*x[,2] + 0.1*runif(50)

## linear regression
regr <- function(x, y, xtest, ytest, logreg=0) {
  C =  diag(x = 10^logreg, ncol(x))
  beta = solve(t(x) \%*\% x + C, t(x) \%*\% y)
  xtest \%*\% beta
}
cv <- cv.setup(x, y, score=mean_se, num_folds = 5, num_iter = 2)
res <- cv.particle_swarm(cv, regr, logreg = c(-3, 5), num_particles = 3, num_generations = 4, maximize = FALSE)
}
\seealso{
\code{\link{cv.run}} for how to define learn-predict function f.
}

